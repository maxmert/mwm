// Generated by CoffeeScript 1.6.1
(function() {

  module.exports = function(grunt) {
    grunt.loadNpmTasks('grunt-jstemplater');
    grunt.loadNpmTasks('grunt-contrib-watch');
    grunt.loadNpmTasks('grunt-coffeelint');
    grunt.loadNpmTasks('grunt-contrib-coffee');
    grunt.loadNpmTasks('grunt-docco');
    return grunt.initConfig({
      pkg: grunt.file.readJSON('package.json'),
      coffeelint: {
        tests: {
          files: {
            src: ['coffee/**/*.coffee']
          },
          options: {
            'no_trailing_whitespace': {
              'level': 'warn'
            },
            'camel_case_classes': {
              'level': 'warn'
            },
            'no_tabs': {
              'level': 'ignore'
            },
            'indentation': {
              'level': 'ignore'
            },
            'max_line_length': {
              'level': 'ignore'
            },
            'no_backticks': {
              'level': 'ignore'
            }
          }
        }
      },
      coffee: {
        global: {
          options: {
            bare: true
          },
          expand: true,
          cwd: 'coffee',
          src: ['**/!(Gruntfile)*.coffee'],
          dest: '.',
          ext: '.js'
        }
      },
      template: {
        prod: {
          src: 'public/js/templates/**/*.mustache',
          dest: 'public/js/templates.js',
          variables: {
            name: 'TEMPLATES',
            staticPath: 'public/js/templates'
          }
        }
      },
      docco: {
        docs: {
          src: ['coffee/public/js/**/*.coffee'],
          options: {
            output: 'docs/'
          }
        }
      },
      watch: {
        coffee: {
          files: ['coffee/**/*.coffee'],
          tasks: ['coffeelint', 'coffee:global', 'docco']
        },
        docco: {
          files: ['<%= docco.docs.src %>'],
          tasks: ['docco']
        },
        template: {
          files: ['<%= template.prod.src %>'],
          tasks: ['template']
        }
      }
    });
  };

}).call(this);
